{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Project\\\\Staygether\\\\New folder\\\\components\\\\MultiFormTextInput.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TextInputProps } from \"react-native-web/dist/index\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar MultiFormTextInput = function (_React$Component) {\n  _inherits(MultiFormTextInput, _React$Component);\n\n  var _super = _createSuper(MultiFormTextInput);\n\n  function MultiFormTextInput(props) {\n    var _this;\n\n    _classCallCheck(this, MultiFormTextInput);\n\n    _this = _super.call(this, props);\n\n    _this.focus = function () {\n      if (_this.TextInput.current) {\n        _this.TextInput.current.focus();\n      }\n    };\n\n    _this.TextInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(MultiFormTextInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          otherProps = _objectWithoutProperties(_this$props, [\"style\"]);\n\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        accessible: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, _extends({\n        multiline: true,\n        numberOfLines: 4,\n        ref: this.TextInput,\n        selectionColor: \"#7444C0\",\n        style: [styles.textinput, style]\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n\n  return MultiFormTextInput;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  textinput: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    marginBottom: 20\n  }\n});\nexport default MultiFormTextInput;","map":{"version":3,"sources":["D:/Project/Staygether/New folder/components/MultiFormTextInput.js"],"names":["React","TextInputProps","MultiFormTextInput","props","focus","TextInput","current","createRef","style","otherProps","Keyboard","dismiss","styles","textinput","Component","StyleSheet","create","borderBottomWidth","hairlineWidth","marginBottom"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;SACgCC,c;;;;;IAE1BC,kB;;;;;AACF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAInBC,KAJmB,GAIX,YAAM;AACV,UAAI,MAAKC,SAAL,CAAeC,OAAnB,EAA4B;AACxB,cAAKD,SAAL,CAAeC,OAAf,CAAuBF,KAAvB;AACH;AACJ,KARkB;;AAEf,UAAKC,SAAL,GAAiBL,KAAK,CAACO,SAAN,EAAjB;AAFe;AAGlB;;;;6BAMQ;AAAA,wBAC4B,KAAKJ,KADjC;AAAA,UACGK,KADH,eACGA,KADH;AAAA,UACaC,UADb;;AAEL,aACI,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAEC,QAAQ,CAACC,OAA5C;AAAqD,QAAA,UAAU,EAAE,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,aAAa,EAAE,CAFnB;AAGI,QAAA,GAAG,EAAE,KAAKN,SAHd;AAII,QAAA,cAAc,EAAC,SAJnB;AAKI,QAAA,KAAK,EAAE,CAACO,MAAM,CAACC,SAAR,EAAmBL,KAAnB;AALX,SAMQC,UANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CADJ;AAcH;;;;EA1B4BT,KAAK,CAACc,S;;AA6BvC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,iBAAiB,EAAEF,UAAU,CAACG,aADvB;AAEPC,IAAAA,YAAY,EAAE;AAFP;AADkB,CAAlB,CAAf;AAOA,eAAejB,kBAAf","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, TextInput, TextInputProps, Keyboard, TouchableWithoutFeedback, View } from 'react-native';\r\n\r\nclass MultiFormTextInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.TextInput = React.createRef();\r\n    }\r\n    focus = () => {\r\n        if (this.TextInput.current) {\r\n            this.TextInput.current.focus();\r\n        }\r\n    };\r\n    render() {\r\n        const { style, ...otherProps } = this.props;\r\n        return (\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n                <View>\r\n                    <TextInput\r\n                        multiline\r\n                        numberOfLines={4}\r\n                        ref={this.TextInput}\r\n                        selectionColor=\"#7444C0\"\r\n                        style={[styles.textinput, style]}\r\n                        {...otherProps}\r\n                    />\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textinput: {\r\n        borderBottomWidth: StyleSheet.hairlineWidth,\r\n        marginBottom: 20\r\n    }\r\n});\r\n\r\nexport default MultiFormTextInput;"]},"metadata":{},"sourceType":"module"}