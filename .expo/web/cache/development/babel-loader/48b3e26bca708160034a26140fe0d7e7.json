{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Project\\\\Staygether\\\\New folder\\\\components\\\\Button.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Button = function (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          otherProps = _objectWithoutProperties(_this$props, [\"style\"]);\n\n      var _this$props2 = this.props,\n          label = _this$props2.label,\n          onPress = _this$props2.onPress;\n      return React.createElement(TouchableOpacity, {\n        style: [styles.container, style],\n        onPress: onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: [styles.text, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }\n      }, label));\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#7444C0\",\n    marginBottom: 12,\n    paddingVertical: 12,\n    borderRadius: 4,\n    borderWidth: StyleSheet.hairlineWidth\n  },\n  text: {\n    color: \"#FFF\",\n    textAlign: \"center\",\n    height: 20\n  }\n});\nexport default Button;","map":{"version":3,"sources":["D:/Project/Staygether/New folder/components/Button.js"],"names":["React","Button","props","style","otherProps","label","onPress","styles","container","text","Component","StyleSheet","create","width","alignItems","justifyContent","backgroundColor","marginBottom","paddingVertical","borderRadius","borderWidth","hairlineWidth","color","textAlign","height"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;IAGMC,M;;;;;;;;;;;;;6BACO;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACaC,UADb;;AAAA,yBAEsB,KAAKF,KAF3B;AAAA,UAEGG,KAFH,gBAEGA,KAFH;AAAA,UAEUC,OAFV,gBAEUA,OAFV;AAGL,aACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBL,KAAnB,CAAzB;AAAoD,QAAA,OAAO,EAAEG,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACE,IAAR,EAAcN,KAAd,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCE,KAApC,CADJ,CADJ;AAKH;;;;EATgBL,KAAK,CAACU,S;;AAY3B,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE,SAJV;AAKPC,IAAAA,YAAY,EAAE,EALP;AAMPC,IAAAA,eAAe,EAAE,EANV;AAOPC,IAAAA,YAAY,EAAE,CAPP;AAQPC,IAAAA,WAAW,EAAET,UAAU,CAACU;AARjB,GADkB;AAW7BZ,EAAAA,IAAI,EAAE;AACFa,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,SAAS,EAAE,QAFT;AAGFC,IAAAA,MAAM,EAAE;AAHN;AAXuB,CAAlB,CAAf;AAkBA,eAAevB,MAAf","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\r\n\r\nclass Button extends React.Component {\r\n    render() {\r\n        const { style, ...otherProps } = this.props;\r\n        const { label, onPress } = this.props;\r\n        return (\r\n            <TouchableOpacity style={[styles.container, style]} onPress={onPress}>\r\n                <Text style={[styles.text, style]}>{label}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}   \r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#7444C0\",\r\n        marginBottom: 12,\r\n        paddingVertical: 12,\r\n        borderRadius: 4,\r\n        borderWidth: StyleSheet.hairlineWidth,\r\n    },\r\n    text: {\r\n        color: \"#FFF\",\r\n        textAlign: \"center\",\r\n        height: 20,\r\n    }\r\n});\r\n\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}