{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Project\\\\Staygether\\\\New folder\\\\containers\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport styles from \"../assets/styles\";\nimport HomeScreen from \"./Home\";\nimport MatchesScreen from \"./Matches\";\nimport MessagesScreen from \"./Messages\";\nimport Icon from \"../components/Icon\";\nimport { NavigationContainer, TabActions } from \"@react-navigation/native\";\nvar Tab = createBottomTabNavigator();\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused;\n              var iconName;\n\n              if (route.name === 'Trang chủ') {\n                iconName = \"explore\";\n              } else if (route.name === 'Cá nhân') {\n                iconName = \"user\";\n              } else if (route.name === 'Quan tâm') {\n                iconName = \"heart\";\n              } else if (route.name === 'Tin nhắn') {\n                iconName = \"chat\";\n              }\n\n              ;\n              var iconFocused = focused ? \"#7444C0\" : \"#363636\";\n              return React.createElement(Text, {\n                style: [styles.iconMenu, {\n                  color: iconFocused\n                }],\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 17\n                }\n              }, React.createElement(Icon, {\n                name: iconName,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 19\n                }\n              }));\n            }\n          };\n        },\n        tabBarOptions: {\n          activeTintColor: \"#7444C0\",\n          inactiveTintColor: \"#363636\",\n          labelStyle: {\n            fontSize: 14,\n            textTransform: \"uppercase\",\n            paddingTop: 10\n          },\n          style: {\n            backgroundColor: \"#FFF\",\n            borderTopWidth: 0,\n            paddingVertical: 20,\n            height: 50,\n            marginBottom: 0,\n            shadowOpacity: 0.05,\n            shadowRadius: 10,\n            shadowColor: \"#000\",\n            shadowOffset: {\n              height: 0,\n              width: 0\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Trang ch\\u1EE7\",\n        component: HomeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Quan t\\xE2m\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, function () {\n        return React.createElement(MatchesScreen, {\n          myProp: _this.props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 20\n          }\n        });\n      }), React.createElement(Tab.Screen, {\n        name: \"Tin nh\\u1EAFn\",\n        component: MessagesScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["D:/Project/Staygether/New folder/containers/Main.js"],"names":["React","Component","createBottomTabNavigator","styles","HomeScreen","MatchesScreen","MessagesScreen","Icon","NavigationContainer","TabActions","Tab","Main","route","tabBarIcon","focused","iconName","name","iconFocused","iconMenu","color","activeTintColor","inactiveTintColor","labelStyle","fontSize","textTransform","paddingTop","style","backgroundColor","borderTopWidth","paddingVertical","height","marginBottom","shadowOpacity","shadowRadius","shadowColor","shadowOffset","width","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, Alert } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport styles from \"../assets/styles\";\r\nimport HomeScreen from \"./Home\";\r\nimport MatchesScreen from \"./Matches\";\r\nimport MessagesScreen from \"./Messages\";\r\nimport Icon from \"../components/Icon\";\r\nimport { NavigationContainer, TabActions } from \"@react-navigation/native\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nclass Main extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <NavigationContainer>\r\n        <Tab.Navigator\r\n          screenOptions={({ route }) => ({\r\n            tabBarIcon: ({ focused }) => {\r\n              let iconName;\r\n\r\n              if (route.name === 'Trang chủ') {\r\n                iconName = \"explore\";\r\n              } else if (route.name === 'Cá nhân') {\r\n                iconName = \"user\";\r\n              } else if (route.name === 'Quan tâm') {\r\n                iconName = \"heart\";\r\n              } else if (route.name === 'Tin nhắn') {\r\n                iconName = \"chat\";\r\n              };\r\n              const iconFocused = focused ? \"#7444C0\" : \"#363636\";\r\n              // You can return any component that you like here!\r\n              return (\r\n                <Text style={[styles.iconMenu, { color: iconFocused }]}>\r\n                  <Icon name={iconName} />\r\n                </Text>\r\n              );\r\n            },\r\n          })}\r\n          tabBarOptions={{\r\n            activeTintColor: \"#7444C0\",\r\n            inactiveTintColor: \"#363636\",\r\n            labelStyle: {\r\n              fontSize: 14,\r\n              textTransform: \"uppercase\",\r\n              paddingTop: 10\r\n            },\r\n            style: {\r\n              backgroundColor: \"#FFF\",\r\n              borderTopWidth: 0,\r\n              paddingVertical: 20,\r\n              height: 50,\r\n              marginBottom: 0,\r\n              shadowOpacity: 0.05,\r\n              shadowRadius: 10,\r\n              shadowColor: \"#000\",\r\n              shadowOffset: { height: 0, width: 0 }\r\n            }\r\n          }}\r\n\r\n        >\r\n          <Tab.Screen name=\"Trang chủ\" component={HomeScreen} />\r\n          <Tab.Screen name=\"Quan tâm\">\r\n            {() => <MatchesScreen myProp={this.props} />}\r\n          </Tab.Screen>\r\n          <Tab.Screen name=\"Tin nhắn\" component={MessagesScreen} />\r\n        </Tab.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}